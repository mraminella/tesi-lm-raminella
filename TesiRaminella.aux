\relax 
\providecommand\zref@newlabel[2]{}
\providecommand{\transparent@use}[1]{}
\providecommand\hyper@newdestlabel[2]{}
\bibstyle{biblatex}
\bibdata{TesiRaminella-blx,bibliografia}
\citation{biblatex-control}
\abx@aux@refcontext{none/global//global/global}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\providecommand \oddpage@label [2]{}
\@writefile{toc}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lof}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lot}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\babel@aux{italian}{}
\babel@aux{italian}{}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{Introduzione}{1}{chapter*.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {1}Un problema di Data Science}{2}{chapter.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{problema}{{1}{2}{Un problema di Data Science}{chapter.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.1}Il problema}{2}{section.1.1}\protected@file@percent }
\citation{aggarwal}
\abx@aux@cite{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.2}Il dataset}{3}{section.1.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Una telemetria rappresentata come serie temporale in un intervallo dalle 16:30 alle 17 di una certa giornata. Per ogni puntino si ha un valore, in questa serie ci sono valori ad intervalli fissi di 15 secondi. Dalle 16:30 alle 16:38 circa ha valore 264.5, poi sale a 268 fino alle 16:39:45. Alle 16:40 si ha un nuovo valore di 264, che persiste nelle successive letture fino alle 16.47, dove la nuova lettura ha nuovamente valore 268. Prosegue cos\IeC {\`\i } via salendo ogni qualche minuto, fino a ottenere alle 16:57 valore 276. \relax }}{3}{figure.caption.3}\protected@file@percent }
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:serie}{{1.1}{3}{Una telemetria rappresentata come serie temporale in un intervallo dalle 16:30 alle 17 di una certa giornata. Per ogni puntino si ha un valore, in questa serie ci sono valori ad intervalli fissi di 15 secondi. Dalle 16:30 alle 16:38 circa ha valore 264.5, poi sale a 268 fino alle 16:39:45. Alle 16:40 si ha un nuovo valore di 264, che persiste nelle successive letture fino alle 16.47, dove la nuova lettura ha nuovamente valore 268. Prosegue così via salendo ogni qualche minuto, fino a ottenere alle 16:57 valore 276. \relax }{figure.caption.3}{}}
\citation{panzieri}
\abx@aux@cite{panzieri}
\abx@aux@segm{0}{0}{panzieri}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.1}Generazione dataset}{4}{subsection.1.2.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{SCADA}{4}{section*.4}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Schermata dello SCADA con i sensori direzione e velocit\IeC {\`a} vento della regione (watermark per NDA).\relax }}{6}{figure.caption.5}\protected@file@percent }
\newlabel{fig:scada1}{{1.2}{6}{Schermata dello SCADA con i sensori direzione e velocità vento della regione (watermark per NDA).\relax }{figure.caption.5}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.3}{\ignorespaces Schermata del sistema SCADA di uno degli impianti.\relax }}{6}{figure.caption.6}\protected@file@percent }
\newlabel{fig:scada2}{{1.3}{6}{Schermata del sistema SCADA di uno degli impianti.\relax }{figure.caption.6}{}}
\citation{witten}
\abx@aux@cite{witten}
\abx@aux@segm{0}{0}{witten}
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Dati Meteo}{7}{section*.7}\protected@file@percent }
\newlabel{sectionmeteo}{{1.2.1}{7}{Dati Meteo}{section*.7}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.4}{\ignorespaces Esempio di matrice di punti meteo. Ogni punto, visto come un pixel in questa figura, avr\IeC {\`a} una certa quantit\IeC {\`a} di precipitazione prevista: un pixel pi\IeC {\`u} scuro rappresenta un maggiore quantitativo. \relax }}{7}{figure.caption.8}\protected@file@percent }
\newlabel{fig:radarimg}{{1.4}{7}{Esempio di matrice di punti meteo. Ogni punto, visto come un pixel in questa figura, avrà una certa quantità di precipitazione prevista: un pixel più scuro rappresenta un maggiore quantitativo. \relax }{figure.caption.8}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.2.2}Modello previsionale}{7}{subsection.1.2.2}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1.3}Reti Neurali}{7}{section.1.3}\protected@file@percent }
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.5}{\ignorespaces Un neurone o Perceptron ~\cite {witten}.\relax }}{8}{figure.caption.9}\protected@file@percent }
\newlabel{fig:neurone}{{1.5}{8}{Un neurone o Perceptron ~\cite {witten}.\relax }{figure.caption.9}{}}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.6}{\ignorespaces Esempio di un iperpiano con elementi separabili linearmente~\cite {witten}.\relax }}{9}{figure.caption.10}\protected@file@percent }
\newlabel{fig:iperpiano}{{1.6}{9}{Esempio di un iperpiano con elementi separabili linearmente~\cite {witten}.\relax }{figure.caption.10}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.1}Reti Neurali Multistrato e Profonde}{9}{subsection.1.3.1}\protected@file@percent }
\citation{imagenet}
\abx@aux@cite{imagenet}
\abx@aux@segm{0}{0}{imagenet}
\citation{imagenet}
\abx@aux@segm{0}{0}{imagenet}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.7}{\ignorespaces Esempio di una rete neurale multistrato~\cite {aggarwal}.\relax }}{10}{figure.caption.11}\protected@file@percent }
\newlabel{fig:deepnetwork}{{1.7}{10}{Esempio di una rete neurale multistrato~\cite {aggarwal}.\relax }{figure.caption.11}{}}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.8}{\ignorespaces Alcune classificazioni di immagini della ImageNet challenge~\cite {imagenet}. Ogni immagine \IeC {\`e} classificata da un Deep Network a un possibile oggetto o animale, con una affidabilit\IeC {\`a} indicata fra parentesi.\relax }}{11}{figure.caption.12}\protected@file@percent }
\newlabel{fig:imagenet}{{1.8}{11}{Alcune classificazioni di immagini della ImageNet challenge~\cite {imagenet}. Ogni immagine è classificata da un Deep Network a un possibile oggetto o animale, con una affidabilità indicata fra parentesi.\relax }{figure.caption.12}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.2}Reti Neurali Ricorrenti}{11}{subsection.1.3.2}\protected@file@percent }
\citation{hochreiter}
\abx@aux@cite{hochreiter}
\abx@aux@segm{0}{0}{hochreiter}
\citation{colah}
\abx@aux@cite{colah}
\abx@aux@segm{0}{0}{colah}
\citation{colah}
\abx@aux@segm{0}{0}{colah}
\citation{colah}
\abx@aux@segm{0}{0}{colah}
\citation{colah}
\abx@aux@segm{0}{0}{colah}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.9}{\ignorespaces Esempio di una rete neurale ricorrente~\cite {aggarwal}. A destra \IeC {\`e} mostrata l'architettura, a sinistra il comportamento con l'andare del tempo: all'istante 1 la rete ha in input "the" e manda in input "cat", all'istante 2 ha in input "cat" e in uscita "chased", eccetera.\relax }}{12}{figure.caption.13}\protected@file@percent }
\newlabel{fig:rnn}{{1.9}{12}{Esempio di una rete neurale ricorrente~\cite {aggarwal}. A destra è mostrata l'architettura, a sinistra il comportamento con l'andare del tempo: all'istante 1 la rete ha in input "the" e manda in input "cat", all'istante 2 ha in input "cat" e in uscita "chased", eccetera.\relax }{figure.caption.13}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.10}{\ignorespaces Rappresentazione con l'interno di una cella RNN. A destra abbiamo lo stato precedente, in centro lo stato corrente, a destra lo stato futuro della stessa cella ~\cite {colah}.\relax }}{13}{figure.caption.14}\protected@file@percent }
\newlabel{fig:rnn1}{{1.10}{13}{Rappresentazione con l'interno di una cella RNN. A destra abbiamo lo stato precedente, in centro lo stato corrente, a destra lo stato futuro della stessa cella ~\cite {colah}.\relax }{figure.caption.14}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.11}{\ignorespaces Rappresentazione con l'interno di una cella LSTM. Notare i diversi blocchi di retroazione con i pesi separati.~\cite {colah}.\relax }}{13}{figure.caption.15}\protected@file@percent }
\newlabel{fig:lstm1}{{1.11}{13}{Rappresentazione con l'interno di una cella LSTM. Notare i diversi blocchi di retroazione con i pesi separati.~\cite {colah}.\relax }{figure.caption.15}{}}
\citation{sutskever}
\abx@aux@cite{sutskever}
\abx@aux@segm{0}{0}{sutskever}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.3.3}Il modello NMT}{14}{subsection.1.3.3}\protected@file@percent }
\citation{leguennec}
\abx@aux@cite{leguennec}
\abx@aux@segm{0}{0}{leguennec}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.12}{\ignorespaces Architettura NMT. I quadrati con $ T_{n} $ sono i timestep, ovvero i valori a intervalli temporali fissi. I blocchetti quadrati sono le singole celle LSTM, sopra hanno il dato in ingresso e sotto il dato in uscita (la predizione). Nel decoder le predizioni sono trascurate, vengono conservati solo gli stati. Le frecce rosse sono lo stato, che viene trasferito da una cella a quella successiva. $ T0 $ \IeC {\`e} l'istante attuale, tutti gli istanti successivi sono predizioni. Mano a mano che il tempo scorre, il dato in ingresso scorre verso sinistra: i dati pi\IeC {\`u} vecchi del passato (in questa figura $ T-4 $ \IeC {\`e} il dato pi\IeC {\`u} vecchio) vengono scartati, facendo entrare da destra le informazioni pi\IeC {\`u} recenti. \relax }}{15}{figure.caption.16}\protected@file@percent }
\newlabel{fig:nmt1}{{1.12}{15}{Architettura NMT. I quadrati con $ T_{n} $ sono i timestep, ovvero i valori a intervalli temporali fissi. I blocchetti quadrati sono le singole celle LSTM, sopra hanno il dato in ingresso e sotto il dato in uscita (la predizione). Nel decoder le predizioni sono trascurate, vengono conservati solo gli stati. Le frecce rosse sono lo stato, che viene trasferito da una cella a quella successiva. $ T0 $ è l'istante attuale, tutti gli istanti successivi sono predizioni. Mano a mano che il tempo scorre, il dato in ingresso scorre verso sinistra: i dati più vecchi del passato (in questa figura $ T-4 $ è il dato più vecchio) vengono scartati, facendo entrare da destra le informazioni più recenti. \relax }{figure.caption.16}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Architettura rete previsionale}{15}{section*.17}\protected@file@percent }
\newlabel{generativernn}{{1.3.3}{15}{Architettura rete previsionale}{section*.17}{}}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.13}{\ignorespaces Architettura rete previsionale semplificata. A sinistra si ha la rete di generazione dello stato iniziale, che comprime le telemetrie del passato tramite strati di convoluzione. Al centro la rete encoder NMT, che riceve i dati dei sensori pi\IeC {\`u} recenti. A destra la rete decoder, che riceve il valore attuale dei sensori e le previsioni di precipitazione. \relax }}{16}{figure.caption.18}\protected@file@percent }
\newlabel{fig:nmt1}{{1.13}{16}{Architettura rete previsionale semplificata. A sinistra si ha la rete di generazione dello stato iniziale, che comprime le telemetrie del passato tramite strati di convoluzione. Al centro la rete encoder NMT, che riceve i dati dei sensori più recenti. A destra la rete decoder, che riceve il valore attuale dei sensori e le previsioni di precipitazione. \relax }{figure.caption.18}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.14}{\ignorespaces Primo stadio convoluzionale della rete previsionale. Sopra si ha un ampio intervallo temporale dei segnali, che viene compresso da un primo strato di rete convoluzionale a 256 valori. Segue con altri strati convoluzionali, fino a ottenere 64 valori. Quei valori saranno i rispettivi stati iniziali delle celle del primo timestep della rete encoder NMT. \relax }}{17}{figure.caption.19}\protected@file@percent }
\newlabel{fig:conv1d}{{1.14}{17}{Primo stadio convoluzionale della rete previsionale. Sopra si ha un ampio intervallo temporale dei segnali, che viene compresso da un primo strato di rete convoluzionale a 256 valori. Segue con altri strati convoluzionali, fino a ottenere 64 valori. Quei valori saranno i rispettivi stati iniziali delle celle del primo timestep della rete encoder NMT. \relax }{figure.caption.19}{}}
\citation{giuliacci_giuliacci_corazzon_2010}
\abx@aux@cite{giuliacci_giuliacci_corazzon_2010}
\abx@aux@segm{0}{0}{giuliacci_giuliacci_corazzon_2010}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.15}{\ignorespaces Dimensionality reduction dei dati meteo. Sopra si hanno in ingresso tutti i punti geografici con il proprio valore previsionale di precipitazione. Multipli strati fully connected riducono la dimensionalit\IeC {\`a} fino ad arrivare a un vettore di 16 valori.\relax }}{18}{figure.caption.20}\protected@file@percent }
\newlabel{fig:rnn3}{{1.15}{18}{Dimensionality reduction dei dati meteo. Sopra si hanno in ingresso tutti i punti geografici con il proprio valore previsionale di precipitazione. Multipli strati fully connected riducono la dimensionalità fino ad arrivare a un vettore di 16 valori.\relax }{figure.caption.20}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {1.16}{\ignorespaces Architettura rete previsionale delle timeseries. Per ogni strato, rappresentato da un blocco intero grigio, sopra vi \IeC {\`e} l'ingresso, sotto l'uscita, a destra l'uscita dello stato finale. A sinistra si ha la rete convoluzionale del passato, che genera lo stato iniziale dell'encoder NMT. Al centro vi \IeC {\`e} l'encoder NMT, di cui si conserva solo lo stato finale. A sinistra il decoder NMT, che riceve il valore attuale delle telemetrie e del meteo, ed esegue le previsioni delle telemetrie. \relax }}{19}{figure.caption.21}\protected@file@percent }
\newlabel{fig:rnnarchtimes}{{1.16}{19}{Architettura rete previsionale delle timeseries. Per ogni strato, rappresentato da un blocco intero grigio, sopra vi è l'ingresso, sotto l'uscita, a destra l'uscita dello stato finale. A sinistra si ha la rete convoluzionale del passato, che genera lo stato iniziale dell'encoder NMT. Al centro vi è l'encoder NMT, di cui si conserva solo lo stato finale. A sinistra il decoder NMT, che riceve il valore attuale delle telemetrie e del meteo, ed esegue le previsioni delle telemetrie. \relax }{figure.caption.21}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {2}Dataset e training}{20}{chapter.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{dataset}{{2}{20}{Dataset e training}{chapter.2}{}}
\citation{kimball_ross_2013}
\abx@aux@cite{kimball_ross_2013}
\abx@aux@segm{0}{0}{kimball_ross_2013}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces Schema architetturare generazione dataset. I cilindri rappresentano basi di dati, i blocchi gialli sono processi di trasformazione dei dati. Ogni elemento dell'architettura realizzata si trova in un piano che indica la tecnologia utilizzata per esso, tranne la sorgente dato che \IeC {\`e} del cliente e viene considerata esterna. Su Script abbiamo dei script UNIX, su InfluxDB ogni cilindro \IeC {\`e} un database diverso, su Beam/Dataflow ogni blocco \IeC {\`e} una pipeline differente, infine su BigQuery il Dataset \IeC {\`e} memorizzato su una propria tabella. \relax }}{21}{figure.caption.22}\protected@file@percent }
\newlabel{fig:dataset0}{{2.1}{21}{Schema architetturare generazione dataset. I cilindri rappresentano basi di dati, i blocchi gialli sono processi di trasformazione dei dati. Ogni elemento dell'architettura realizzata si trova in un piano che indica la tecnologia utilizzata per esso, tranne la sorgente dato che è del cliente e viene considerata esterna. Su Script abbiamo dei script UNIX, su InfluxDB ogni cilindro è un database diverso, su Beam/Dataflow ogni blocco è una pipeline differente, infine su BigQuery il Dataset è memorizzato su una propria tabella. \relax }{figure.caption.22}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.1}Ingestion}{21}{section.2.1}\protected@file@percent }
\newlabel{ingestion}{{2.1}{21}{Ingestion}{section.2.1}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces Ingestion dei dati grezzi. I dati di SCADA e di precipitazioni meteo provengono in formati diversi e hanno campi diversi, quindi vengono salvati in database differenti.\relax }}{22}{figure.caption.23}\protected@file@percent }
\newlabel{fig:dataset1}{{2.2}{22}{Ingestion dei dati grezzi. I dati di SCADA e di precipitazioni meteo provengono in formati diversi e hanno campi diversi, quindi vengono salvati in database differenti.\relax }{figure.caption.23}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.1}InfluxDB}{22}{subsection.2.1.1}\protected@file@percent }
\newlabel{influx}{{2.1.1}{22}{InfluxDB}{subsection.2.1.1}{}}
\citation{kefauver_patschke_2007}
\abx@aux@cite{kefauver_patschke_2007}
\abx@aux@segm{0}{0}{kefauver_patschke_2007}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.1.2}Ingestion su InfluxDB}{23}{subsection.2.1.2}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2.2}Campionamento e aggregazione}{23}{section.2.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces Ricampionamento dei dati grezzi. I sensori vengono campionati ogni 15 secondi, il meteo viene direttamente campionato ogni minuto. \relax }}{24}{figure.caption.24}\protected@file@percent }
\newlabel{fig:dataset2}{{2.3}{24}{Ricampionamento dei dati grezzi. I sensori vengono campionati ogni 15 secondi, il meteo viene direttamente campionato ogni minuto. \relax }{figure.caption.24}{}}
\citation{calandrino_chiani_2002}
\abx@aux@cite{calandrino_chiani_2002}
\abx@aux@segm{0}{0}{calandrino_chiani_2002}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces Dati grezzi del segnale. Si considera un intervallo dalle 12:20:00 alle 12:21:40. Si vedono due letture, una alle 12:20:15, una alle 12:21:28, distinguibili dai puntini verdi.\relax }}{25}{figure.caption.25}\protected@file@percent }
\newlabel{fig:samplehold1}{{2.4}{25}{Dati grezzi del segnale. Si considera un intervallo dalle 12:20:00 alle 12:21:40. Si vedono due letture, una alle 12:20:15, una alle 12:21:28, distinguibili dai puntini verdi.\relax }{figure.caption.25}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces Lo stesso segnale dopo Sample and Hold. I campioni sono a intervalli fissi di 15 secondi: il primo \IeC {\`e} alle 12:20:00, il secondo alle 12:20:15, e cos\IeC {\`\i } via. Il valore di ciascun campione \IeC {\`e} determinato dal valore della lettura pi\IeC {\`u} recente: alle 12:20:00 si ha il valore (non visibile nella figura sopra) della lettura precedente, che persiste fino alle 12:20:30, in cui si ha il valore letto pi\IeC {\`u} recentemente, e cos\IeC {\`\i } via.\relax }}{25}{figure.caption.26}\protected@file@percent }
\newlabel{fig:samplehold2}{{2.5}{25}{Lo stesso segnale dopo Sample and Hold. I campioni sono a intervalli fissi di 15 secondi: il primo è alle 12:20:00, il secondo alle 12:20:15, e così via. Il valore di ciascun campione è determinato dal valore della lettura più recente: alle 12:20:00 si ha il valore (non visibile nella figura sopra) della lettura precedente, che persiste fino alle 12:20:30, in cui si ha il valore letto più recentemente, e così via.\relax }{figure.caption.26}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.1}Campionamento}{25}{subsection.2.2.1}\protected@file@percent }
\newlabel{sample}{{2.2.1}{25}{Campionamento}{subsection.2.2.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Telemetrie dei sensori}{25}{section*.27}\protected@file@percent }
\citation{ross_2014}
\abx@aux@cite{ross_2014}
\abx@aux@segm{0}{0}{ross_2014}
\citation{aggarwal}
\abx@aux@segm{0}{0}{aggarwal}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces Query di Influx che include il predicato necessario a campionare ogni 15 secondi con metodo Sample and Hold. \relax }}{26}{figure.caption.28}\protected@file@percent }
\newlabel{fig:influx1}{{2.6}{26}{Query di Influx che include il predicato necessario a campionare ogni 15 secondi con metodo Sample and Hold. \relax }{figure.caption.28}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Dati Meteo}{26}{section*.29}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces Combinazione dei dati previsionali a 40 e 60 minuti: vengono conservate solo le previsioni valide. \relax }}{26}{figure.caption.30}\protected@file@percent }
\newlabel{fig:meteo1}{{2.7}{26}{Combinazione dei dati previsionali a 40 e 60 minuti: vengono conservate solo le previsioni valide. \relax }{figure.caption.30}{}}
\citation{wikipedia_2019}
\abx@aux@cite{wikipedia_2019}
\abx@aux@segm{0}{0}{wikipedia_2019}
\citation{ross_2014}
\abx@aux@segm{0}{0}{ross_2014}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.2}Aggregazione e standardizzazione}{27}{subsection.2.2.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces Aggregazione e standardizzazione. Per i dati dei sensori viene calcolata la media (per i segnali continui) o la moda (per i segnali discreti) per calcolare il valore ogni minuto. Sia per i sensori che per i dati meteo si effettua la standardizzazione. \relax }}{27}{figure.caption.31}\protected@file@percent }
\newlabel{fig:dataset4}{{2.8}{27}{Aggregazione e standardizzazione. Per i dati dei sensori viene calcolata la media (per i segnali continui) o la moda (per i segnali discreti) per calcolare il valore ogni minuto. Sia per i sensori che per i dati meteo si effettua la standardizzazione. \relax }{figure.caption.31}{}}
\citation{wei_1990}
\abx@aux@cite{wei_1990}
\abx@aux@segm{0}{0}{wei_1990}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces Aggregazione telemetrie sensori. Per i segnali discreti (o digitali) viene calcolata la moda nel corso del minuto. Per i segnali continui (o analogici) viene calcolata la media con la regola del trapezio. \relax }}{28}{figure.caption.32}\protected@file@percent }
\newlabel{fig:dataset3}{{2.9}{28}{Aggregazione telemetrie sensori. Per i segnali discreti (o digitali) viene calcolata la moda nel corso del minuto. Per i segnali continui (o analogici) viene calcolata la media con la regola del trapezio. \relax }{figure.caption.32}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.3}Data augmentation}{29}{subsection.2.2.3}\protected@file@percent }
\newlabel{dataaugmentation}{{2.2.3}{29}{Data augmentation}{subsection.2.2.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces Generazione finestre e data augmentation tramite i time lag. Si parte dalla giornata normale, che inizia alle 0:00 e finisce alle 23:59. Per aumentare la dimensionalit\IeC {\`a} del dataset, si considerano anche la giornata che inizia alle 0:01 e finisce alle 24:00 del giorno dopo, ma anche quella dalle 0:02 alle 24:01 del giorno dopo, e cos\IeC {\`\i } via.\relax }}{29}{figure.caption.33}\protected@file@percent }
\newlabel{fig:dataset5}{{2.10}{29}{Generazione finestre e data augmentation tramite i time lag. Si parte dalla giornata normale, che inizia alle 0:00 e finisce alle 23:59. Per aumentare la dimensionalità del dataset, si considerano anche la giornata che inizia alle 0:01 e finisce alle 24:00 del giorno dopo, ma anche quella dalle 0:02 alle 24:01 del giorno dopo, e così via.\relax }{figure.caption.33}{}}
\citation{kemker2018measuring}
\abx@aux@cite{kemker2018measuring}
\abx@aux@segm{0}{0}{kemker2018measuring}
\citation{chung2017ubershuffle}
\abx@aux@cite{chung2017ubershuffle}
\abx@aux@segm{0}{0}{chung2017ubershuffle}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.11}{\ignorespaces Data augmentation. Una pipeline realizzata allo scopo unisce i dati dei sensori e del meteo ed esegue il processo descritto in questa sezione e visto in figura \ref  {fig:dataset5}.\relax }}{30}{figure.caption.34}\protected@file@percent }
\newlabel{fig:dataset6}{{2.11}{30}{Data augmentation. Una pipeline realizzata allo scopo unisce i dati dei sensori e del meteo ed esegue il processo descritto in questa sezione e visto in figura \ref {fig:dataset5}.\relax }{figure.caption.34}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.2.4}Training della rete}{30}{subsection.2.2.4}\protected@file@percent }
\citation{pickle}
\abx@aux@cite{pickle}
\abx@aux@segm{0}{0}{pickle}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2.12}{\ignorespaces Architettura generazione dati di training e il training vero e proprio. Scopo di questa architettura \IeC {\`e} prima mescolare in maniera stocastica il dataset e poi eseguire il training, sfruttando Google Cloud MLEngine. \relax }}{31}{figure.caption.35}\protected@file@percent }
\newlabel{fig:train}{{2.12}{31}{Architettura generazione dati di training e il training vero e proprio. Scopo di questa architettura è prima mescolare in maniera stocastica il dataset e poi eseguire il training, sfruttando Google Cloud MLEngine. \relax }{figure.caption.35}{}}
\citation{white_2012}
\abx@aux@cite{white_2012}
\abx@aux@segm{0}{0}{white_2012}
\citation{apachebeam}
\abx@aux@cite{apachebeam}
\abx@aux@segm{0}{0}{apachebeam}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {3}Pipeline in batch e training}{32}{chapter.3}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{pipelinebatch}{{3}{32}{Pipeline in batch e training}{chapter.3}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.1}PCollection}{33}{section.3.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.2}Operazioni elementari}{33}{section.3.2}\protected@file@percent }
\newlabel{beamoperations}{{3.2}{33}{Operazioni elementari}{section.3.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.1}ParDo}{33}{subsection.3.2.1}\protected@file@percent }
\newlabel{pardo}{{3.2.1}{33}{ParDo}{subsection.3.2.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.2}GroupByKey}{34}{subsection.3.2.2}\protected@file@percent }
\newlabel{groupbykey}{{3.2.2}{34}{GroupByKey}{subsection.3.2.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.2.3}CoGroupByKey}{35}{subsection.3.2.3}\protected@file@percent }
\citation{numpyrandomstate}
\abx@aux@cite{numpyrandomstate}
\abx@aux@segm{0}{0}{numpyrandomstate}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.3}Dataset shuffling}{36}{section.3.3}\protected@file@percent }
\citation{tensorflow}
\abx@aux@cite{tensorflow}
\abx@aux@segm{0}{0}{tensorflow}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.1}{\ignorespaces Funzione di shuffling casuale delle finestre in un epoca realizzata in Python. Il seed viene inizializzato al numero di epoca, dato che il generatore di numeri \IeC {\`e} pseudocasuale: usare lo stesso seed provocherebbe la generazione multipla dello stesso insieme di numeri casuali. \relax }}{37}{figure.caption.36}\protected@file@percent }
\newlabel{fig:shuffling}{{3.1}{37}{Funzione di shuffling casuale delle finestre in un epoca realizzata in Python. Il seed viene inizializzato al numero di epoca, dato che il generatore di numeri è pseudocasuale: usare lo stesso seed provocherebbe la generazione multipla dello stesso insieme di numeri casuali. \relax }{figure.caption.36}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.2}{\ignorespaces Pipeline di generazione TFRecord di un'epoca. Sopra si ha il file di origine, che contiene un dizionario di finestre di 24 ore generate come indicato su \ref  {dataaugmentation}. I blocchi rettangolari sono stadi della pipeline. Il primo legge le singole tuple del dizionario, che \IeC {\`e} gi\IeC {\`a} stato mescolato casualmente. Il secondo emette per ogni tupla il suo URL, il terzo legge il file indicato nell'URL. Il quarto stadio, infine, scrive il contenuto dei file su un TFRecord, rappresentato come un cilindro. \relax }}{38}{figure.caption.37}\protected@file@percent }
\newlabel{fig:tfrecord0}{{3.2}{38}{Pipeline di generazione TFRecord di un'epoca. Sopra si ha il file di origine, che contiene un dizionario di finestre di 24 ore generate come indicato su \ref {dataaugmentation}. I blocchi rettangolari sono stadi della pipeline. Il primo legge le singole tuple del dizionario, che è già stato mescolato casualmente. Il secondo emette per ogni tupla il suo URL, il terzo legge il file indicato nell'URL. Il quarto stadio, infine, scrive il contenuto dei file su un TFRecord, rappresentato come un cilindro. \relax }{figure.caption.37}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.3}{\ignorespaces Schermata di Dataflow. A sinistra, per ogni stadio della pipeline, \IeC {\`e} indicato il carico di lavoro richiesto in termini di ore per una CPU singola. A destra, il numero di macchine impiegato per il calcolo distribuito nel corso del tempo di vita della pipeline, distinguendo fra le macchine richieste e quelle effettivamente disponibili. La pipeline \IeC {\`e} durata mezz'ora, utilizzando contemporaneamente al massimo 70 CPU circa, anche se avrebbe potuto utilizzarne 380. Questo \IeC {\`e} accaduto perch\IeC {\`e} la stessa pipeline \IeC {\`e} stata lanciata insieme ad altre 9, superando il limite complessivo di processori disponibili. \relax }}{39}{figure.caption.38}\protected@file@percent }
\newlabel{fig:dataflow1}{{3.3}{39}{Schermata di Dataflow. A sinistra, per ogni stadio della pipeline, è indicato il carico di lavoro richiesto in termini di ore per una CPU singola. A destra, il numero di macchine impiegato per il calcolo distribuito nel corso del tempo di vita della pipeline, distinguendo fra le macchine richieste e quelle effettivamente disponibili. La pipeline è durata mezz'ora, utilizzando contemporaneamente al massimo 70 CPU circa, anche se avrebbe potuto utilizzarne 380. Questo è accaduto perchè la stessa pipeline è stata lanciata insieme ad altre 9, superando il limite complessivo di processori disponibili. \relax }{figure.caption.38}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.1}Soluzione parallelizzata iniziale}{39}{subsection.3.3.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.4}{\ignorespaces Pipeline di generazione TFRecord di un'epoca. Si ha sempre il file di origine delle tuple con le finestre e l'URL del file che la contiene, per\IeC {\`o} non sar\IeC {\`a} mescolato. Lo stadio successivo legge quelle tuple ed emette gli URL. A quel punto la pipeline si divide per il numero di epoche richiesto, per semplicit\IeC {\`a} ne sono raffigurate due. Per ogni epoca vengono letti tutti gli URL, rimescolati, poi vengono emessi per essere letti e scritti su TFRecord. \relax }}{40}{figure.caption.39}\protected@file@percent }
\newlabel{fig:tfrecord1}{{3.4}{40}{Pipeline di generazione TFRecord di un'epoca. Si ha sempre il file di origine delle tuple con le finestre e l'URL del file che la contiene, però non sarà mescolato. Lo stadio successivo legge quelle tuple ed emette gli URL. A quel punto la pipeline si divide per il numero di epoche richiesto, per semplicità ne sono raffigurate due. Per ogni epoca vengono letti tutti gli URL, rimescolati, poi vengono emessi per essere letti e scritti su TFRecord. \relax }{figure.caption.39}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.5}{\ignorespaces Schermata di Dataflow che rappresenta il numero di macchine usate per la pipeline. Il riquadro rosso in aggiunta evidenzia il calo repentino a 10 macchine richieste e utilizzate. \relax }}{41}{figure.caption.40}\protected@file@percent }
\newlabel{fig:dataflow2}{{3.5}{41}{Schermata di Dataflow che rappresenta il numero di macchine usate per la pipeline. Il riquadro rosso in aggiunta evidenzia il calo repentino a 10 macchine richieste e utilizzate. \relax }{figure.caption.40}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.6}{\ignorespaces  Sezione della figura \ref  {fig:tfrecord1} della parte con la singola epoca. Il problema \IeC {\`e} dato dal fatto che prima vengono mescolati tutti gli URL, poi lo stadio successivo li legge per emetterli uno per volta. Questa operazione non \IeC {\`e} scalabile, dato che esegue iterativamente. Lo stadio successivo, che legge i file, \IeC {\`e} molto onerosa e per essere eseguita in tempi ragionevoli richiede di essere eseguita in modo distribuito. \relax }}{42}{figure.caption.41}\protected@file@percent }
\newlabel{fig:tfrecord2}{{3.6}{42}{Sezione della figura \ref {fig:tfrecord1} della parte con la singola epoca. Il problema è dato dal fatto che prima vengono mescolati tutti gli URL, poi lo stadio successivo li legge per emetterli uno per volta. Questa operazione non è scalabile, dato che esegue iterativamente. Lo stadio successivo, che legge i file, è molto onerosa e per essere eseguita in tempi ragionevoli richiede di essere eseguita in modo distribuito. \relax }{figure.caption.41}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.3.2}Soluzione parallelizzata scalabile}{42}{subsection.3.3.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.7}{\ignorespaces Pipeline di generazione TFRecord, versione scalabile. Come quella vista in precedenza, vengono create pi\IeC {\`u} derivazioni a partire dalla pipeline iniziale. Essendo pi\IeC {\`u} complessa, le figure a seguire analizzeranno passo per passo la sua composizione. \relax }}{43}{figure.caption.42}\protected@file@percent }
\newlabel{fig:tfrecord3}{{3.7}{43}{Pipeline di generazione TFRecord, versione scalabile. Come quella vista in precedenza, vengono create più derivazioni a partire dalla pipeline iniziale. Essendo più complessa, le figure a seguire analizzeranno passo per passo la sua composizione. \relax }{figure.caption.42}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.8}{\ignorespaces Lettura delle tuple e dei Pickle: viene letto il dizionario delle finestre di 24 ore, di cui viene conservato sia l'identificativo sia l'URL. Un primo stadio emette queste singole tuple senza modificarle, quello successivo per ciascuna tupla emette l'identificativo e il contenuto del file nel suo URL. In questo modo la lettura viene eseguita preventivamente, conservando una chiave per ogni file che \IeC {\`e} stato letto.\relax }}{44}{figure.caption.43}\protected@file@percent }
\newlabel{fig:tfrecord4}{{3.8}{44}{Lettura delle tuple e dei Pickle: viene letto il dizionario delle finestre di 24 ore, di cui viene conservato sia l'identificativo sia l'URL. Un primo stadio emette queste singole tuple senza modificarle, quello successivo per ciascuna tupla emette l'identificativo e il contenuto del file nel suo URL. In questo modo la lettura viene eseguita preventivamente, conservando una chiave per ogni file che è stato letto.\relax }{figure.caption.43}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.9}{\ignorespaces Pipeline in Python. La prima parte \IeC {\`e} predefinita e definisce l'oggetto Pipeline. La riga che inizia per pickleNames \IeC {\`e} la parte di pipeline che esegue la lettura dei nomi dal file di testo e ne estrae le tuple con la ParDo definita nella funzione ReadTuples, omessa in questa figura. La riga con picklesTrain prende il risultato della precedente, per leggere il contenuto dei file negli URL, con la ParDo definita su ReadPickle, anch'essa omessa. \relax }}{44}{figure.caption.44}\protected@file@percent }
\newlabel{fig:tfrecord1}{{3.9}{44}{Pipeline in Python. La prima parte è predefinita e definisce l'oggetto Pipeline. La riga che inizia per pickleNames è la parte di pipeline che esegue la lettura dei nomi dal file di testo e ne estrae le tuple con la ParDo definita nella funzione ReadTuples, omessa in questa figura. La riga con picklesTrain prende il risultato della precedente, per leggere il contenuto dei file negli URL, con la ParDo definita su ReadPickle, anch'essa omessa. \relax }{figure.caption.44}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.10}{\ignorespaces Shuffling della singola epoca. Il primo stadio riceve gli identificativi delle finestre e li associa al numero di epoca del ramo. Ogni ramo della pipeline avr\IeC {\`a} un identificativo di epoca proprio. Gli identificativi della finestra vengono raggruppati in un'unica collezione, poi vengono mescolati casualmente usando come seed l'epoca corrente. La collezione di identificativi viene iterata, in modo di avere in uscita delle tuple composte dal numero di epoca e un identificativo. Gli identificativi in uscita su shuffledEpoch sono mescolati casualmente rispetto a quelli in ingresso, in ordine, su pickleNames. \relax }}{45}{figure.caption.45}\protected@file@percent }
\newlabel{fig:tfrecord5}{{3.10}{45}{Shuffling della singola epoca. Il primo stadio riceve gli identificativi delle finestre e li associa al numero di epoca del ramo. Ogni ramo della pipeline avrà un identificativo di epoca proprio. Gli identificativi della finestra vengono raggruppati in un'unica collezione, poi vengono mescolati casualmente usando come seed l'epoca corrente. La collezione di identificativi viene iterata, in modo di avere in uscita delle tuple composte dal numero di epoca e un identificativo. Gli identificativi in uscita su shuffledEpoch sono mescolati casualmente rispetto a quelli in ingresso, in ordine, su pickleNames. \relax }{figure.caption.45}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.11}{\ignorespaces Parte di codice Python della pipeline, particolare con la CoGroupByKey. Vengono dichiarate come dizionario le due PCollection di cui si vuole effettuare unione, poi si chiama la CoGroupByKey.\relax }}{46}{figure.caption.46}\protected@file@percent }
\newlabel{fig:tfrecord2}{{3.11}{46}{Parte di codice Python della pipeline, particolare con la CoGroupByKey. Vengono dichiarate come dizionario le due PCollection di cui si vuole effettuare unione, poi si chiama la CoGroupByKey.\relax }{figure.caption.46}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.12}{\ignorespaces CoGroupByKey fra le chiavi mescolate e i dati dei Pickle caricati. A sinistra vengono prese da picklesTrain le tuple con identificativi e file gi\IeC {\`a} letti dai Pickle, da shuffledEpoch le tuple formate da numero epoca e identificativo finestra. Si otterr\IeC {\`a} una collezione con i dati letti dai file mescolati in ordine diverso. \relax }}{46}{figure.caption.47}\protected@file@percent }
\newlabel{fig:tfrecord6}{{3.12}{46}{CoGroupByKey fra le chiavi mescolate e i dati dei Pickle caricati. A sinistra vengono prese da picklesTrain le tuple con identificativi e file già letti dai Pickle, da shuffledEpoch le tuple formate da numero epoca e identificativo finestra. Si otterrà una collezione con i dati letti dai file mescolati in ordine diverso. \relax }{figure.caption.47}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.13}{\ignorespaces Sezione della rappresentazione a blocchi della pipeline su Dataflow. Per ogni blocco, \IeC {\`e} indicato il tempo CPU complessivo utilizzato. Il compito della lettura dei Pickle, il pi\IeC {\`u} oneroso, \IeC {\`e} stato eseguito una volta soltanto, e viene sfruttato per tutte le epoche della pipeline. \relax }}{47}{figure.caption.48}\protected@file@percent }
\newlabel{fig:dataflow3}{{3.13}{47}{Sezione della rappresentazione a blocchi della pipeline su Dataflow. Per ogni blocco, è indicato il tempo CPU complessivo utilizzato. Il compito della lettura dei Pickle, il più oneroso, è stato eseguito una volta soltanto, e viene sfruttato per tutte le epoche della pipeline. \relax }{figure.caption.48}{}}
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.14}{\ignorespaces Porzione di schermata di Dataflow con l'allocazione del calcolo distribuito. Sono stati sfruttati tutti i processori a disposizione della piattaforma, per quasi tutto il tempo di esecuzione. \relax }}{48}{figure.caption.49}\protected@file@percent }
\newlabel{fig:dataflow4}{{3.14}{48}{Porzione di schermata di Dataflow con l'allocazione del calcolo distribuito. Sono stati sfruttati tutti i processori a disposizione della piattaforma, per quasi tutto il tempo di esecuzione. \relax }{figure.caption.49}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3.4}Training della rete}{48}{section.3.4}\protected@file@percent }
\newlabel{training}{{3.4}{48}{Training della rete}{section.3.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.1}Modalit\IeC {\`a} di training della rete}{49}{subsection.3.4.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.15}{\ignorespaces Training in modalit\IeC {\`a} "direct". Sopra si ha l'ingresso del training set, anche per i timestep in cui la rete dovrebbe fare le previsioni. Sotto viene eseguito il confronto della funzione obiettivo per ogni timestep fra la previsione eseguita e quella ottenuta per la rete. \relax }}{49}{figure.caption.50}\protected@file@percent }
\newlabel{fig:traindirect}{{3.15}{49}{Training in modalità "direct". Sopra si ha l'ingresso del training set, anche per i timestep in cui la rete dovrebbe fare le previsioni. Sotto viene eseguito il confronto della funzione obiettivo per ogni timestep fra la previsione eseguita e quella ottenuta per la rete. \relax }{figure.caption.50}{}}
\citation{flovik_flovik_2018}
\abx@aux@cite{flovik_flovik_2018}
\abx@aux@segm{0}{0}{flovik_flovik_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.16}{\ignorespaces Training in modalit\IeC {\`a} "feedback". Vengono forniti i dati del training set alla rete solo fino al timestep "attuale", che sarebbe il $ 1421^{o} $ minuto della giornata nella finestra di 24 ore presa in considerazione, ricordando che il dataset \IeC {\`e} formato da finestre di 24 ore composte di 1440 minuti (timestep). Le previsioni della rete sono usate per ottenere i valori in input successivi, allo stesso modo in cui farebbe le previsioni dopo il training. I risultati delle previsioni vengono confrontati con quelli attesi attraverso la funzione obiettivo. \relax }}{50}{figure.caption.51}\protected@file@percent }
\newlabel{fig:trainfeedback}{{3.16}{50}{Training in modalità "feedback". Vengono forniti i dati del training set alla rete solo fino al timestep "attuale", che sarebbe il $ 1421^{o} $ minuto della giornata nella finestra di 24 ore presa in considerazione, ricordando che il dataset è formato da finestre di 24 ore composte di 1440 minuti (timestep). Le previsioni della rete sono usate per ottenere i valori in input successivi, allo stesso modo in cui farebbe le previsioni dopo il training. I risultati delle previsioni vengono confrontati con quelli attesi attraverso la funzione obiettivo. \relax }{figure.caption.51}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.2}Risultati con dataset estate 2018}{50}{subsection.3.4.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.17}{\ignorespaces In questo grafico si vedono i livelli previsti di precipitazioni dalle 17:30 alle 20:00, in cui si ha un evento di interesse. Si verificano precipitazioni dalle 17:30, che salgono progressivamente fino a 20 millimetri alle ore 19. Dopo le 19:15 i livelli di precipitaizone scendono significativamente. \relax }}{52}{figure.caption.53}\protected@file@percent }
\newlabel{fig:persistence2}{{3.17}{52}{In questo grafico si vedono i livelli previsti di precipitazioni dalle 17:30 alle 20:00, in cui si ha un evento di interesse. Si verificano precipitazioni dalle 17:30, che salgono progressivamente fino a 20 millimetri alle ore 19. Dopo le 19:15 i livelli di precipitaizone scendono significativamente. \relax }{figure.caption.53}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.18}{\ignorespaces In questo grafico si vedono due fra i segnali di cui \IeC {\`e} richiesta la previsione, nello stesso intervallo della figura sopra. In rosso \IeC {\`e} evidenziata la regione critica, data dalla mancata previsione del rialzo imminente dei livelli di due segnali. Le precipitazioni della regione in analisi sono iniziate alle 17:30, con un picco intensivo alle 19. Questo picco ha provocato un innalzamento dei livelli nel giro di 30 minuti. La rete avrebbe dovuto prevedere questo innalzamento, che tuttavia non \IeC {\`e} stato previsto. Si vede un rialzo improvviso della previsione dopo 20 minuti, comportamento tuttavia non desiderato dato che si tratta della previsione successiva: la rete tende a mantenere stabili i livelli dei segnali. \relax }}{52}{figure.caption.54}\protected@file@percent }
\newlabel{fig:persistence1}{{3.18}{52}{In questo grafico si vedono due fra i segnali di cui è richiesta la previsione, nello stesso intervallo della figura sopra. In rosso è evidenziata la regione critica, data dalla mancata previsione del rialzo imminente dei livelli di due segnali. Le precipitazioni della regione in analisi sono iniziate alle 17:30, con un picco intensivo alle 19. Questo picco ha provocato un innalzamento dei livelli nel giro di 30 minuti. La rete avrebbe dovuto prevedere questo innalzamento, che tuttavia non è stato previsto. Si vede un rialzo improvviso della previsione dopo 20 minuti, comportamento tuttavia non desiderato dato che si tratta della previsione successiva: la rete tende a mantenere stabili i livelli dei segnali. \relax }{figure.caption.54}{}}
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\citation{witten}
\abx@aux@segm{0}{0}{witten}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.4.3}Risultati con dataset pioggia 2018}{53}{subsection.3.4.3}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Training direct}{53}{section*.55}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.19}{\ignorespaces Risultati del MAE su Tensorboard per il training "direct". In blu training, in arancione evaluation. Il training continua a scendere, quindi la rete continua a imparare. Il valore medio si attesta su un errore dell'1\%. \relax }}{53}{figure.caption.56}\protected@file@percent }
\newlabel{fig:tensorboard1}{{3.19}{53}{Risultati del MAE su Tensorboard per il training "direct". In blu training, in arancione evaluation. Il training continua a scendere, quindi la rete continua a imparare. Il valore medio si attesta su un errore dell'1\%. \relax }{figure.caption.56}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.20}{\ignorespaces Tabella di confusione fra due categorie \cite {witten}.\relax }}{54}{figure.caption.57}\protected@file@percent }
\newlabel{fig:tensorboard1}{{3.20}{54}{Tabella di confusione fra due categorie \cite {witten}.\relax }{figure.caption.57}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.21}{\ignorespaces Tabella di confusione dai risultati del training "direct" su Tensorboard. In alto a sinistra i zeri corretti, in basso a sinistra i zeri scorretti, in alto a destra i valori maggiori di zero scorretti, in basso a destra quelli corretti.\relax }}{55}{figure.caption.58}\protected@file@percent }
\newlabel{fig:tensorboard2}{{3.21}{55}{Tabella di confusione dai risultati del training "direct" su Tensorboard. In alto a sinistra i zeri corretti, in basso a sinistra i zeri scorretti, in alto a destra i valori maggiori di zero scorretti, in basso a destra quelli corretti.\relax }{figure.caption.58}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.22}{\ignorespaces Esempio di predizione dal modello dopo il training "direct" con dataset "pioggia", su dati del training set. Si tratta dello stesso periodo preso in considerazione nella figura \ref  {fig:persistence1}. Al contrario dell'altro modello, vengono previsti subito i rialzi dei livelli in seguito all'arrivo delle precipitazioni, per tutti i segnali critici in considerazione. \relax }}{56}{figure.caption.59}\protected@file@percent }
\newlabel{fig:grafana1}{{3.22}{56}{Esempio di predizione dal modello dopo il training "direct" con dataset "pioggia", su dati del training set. Si tratta dello stesso periodo preso in considerazione nella figura \ref {fig:persistence1}. Al contrario dell'altro modello, vengono previsti subito i rialzi dei livelli in seguito all'arrivo delle precipitazioni, per tutti i segnali critici in considerazione. \relax }{figure.caption.59}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.23}{\ignorespaces Esempio di predizione dal modello dopo il training "direct" con dataset "pioggia", su dati dell'eval set. Rispetto al training set l'andamento \IeC {\`e} pi\IeC {\`u} caotico, ma prevede correttamente l'innalzamento dei livelli.\relax }}{57}{figure.caption.60}\protected@file@percent }
\newlabel{fig:grafana2}{{3.23}{57}{Esempio di predizione dal modello dopo il training "direct" con dataset "pioggia", su dati dell'eval set. Rispetto al training set l'andamento è più caotico, ma prevede correttamente l'innalzamento dei livelli.\relax }{figure.caption.60}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Training feedback}{57}{section*.61}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.24}{\ignorespaces Risultati del MAE su Tensorboard per il training "feedback". In blu il training, in arancione l'evaluation. In questo caso sembrerebbe che l'evaluation stia avendo valori ottimi, ma verranno visti subito dopo i risultati effettivi.\relax }}{58}{figure.caption.62}\protected@file@percent }
\newlabel{fig:tensorboard3}{{3.24}{58}{Risultati del MAE su Tensorboard per il training "feedback". In blu il training, in arancione l'evaluation. In questo caso sembrerebbe che l'evaluation stia avendo valori ottimi, ma verranno visti subito dopo i risultati effettivi.\relax }{figure.caption.62}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.25}{\ignorespaces Tabella di confusione dai risultati del training "feedback" su Tensorboard. Un numero inferiore di segnali erroneamente maggiori allo zero sembrerebbe suggerire una previsione pi\IeC {\`u} precisa. \relax }}{59}{figure.caption.63}\protected@file@percent }
\newlabel{fig:tensorboard4}{{3.25}{59}{Tabella di confusione dai risultati del training "feedback" su Tensorboard. Un numero inferiore di segnali erroneamente maggiori allo zero sembrerebbe suggerire una previsione più precisa. \relax }{figure.caption.63}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3.26}{\ignorespaces Esempio di previsione tipo "persistence model" con il training "feedback". Si ha nuovamente un andamento simile a quello visto su figura \ref  {fig:persistence1} sull'evaluation set.\relax }}{60}{figure.caption.64}\protected@file@percent }
\newlabel{fig:persistence3}{{3.26}{60}{Esempio di previsione tipo "persistence model" con il training "feedback". Si ha nuovamente un andamento simile a quello visto su figura \ref {fig:persistence1} sull'evaluation set.\relax }{figure.caption.64}{}}
\citation{akidauchernyaklax}
\abx@aux@cite{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{apachebeam}
\abx@aux@segm{0}{0}{apachebeam}
\citation{apachebeam}
\abx@aux@segm{0}{0}{apachebeam}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {4}Pipeline in streaming}{61}{chapter.4}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{pipelinestreaming}{{4}{61}{Pipeline in streaming}{chapter.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.1}Windowing}{61}{section.4.1}\protected@file@percent }
\newlabel{windowing}{{4.1}{61}{Windowing}{section.4.1}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces Processo di windowing \cite {apachebeam}. Le finestre sono assegnate nel processo di Windowing, tuttavia la suddivisione vera e propria avviene solo quando viene effettuata anche la GroupByKey. Questo significa che qualunque operazione sia compiuta dalla ParDo raffigurata nel terzo blocco sar\IeC {\`a} eseguita indistintamente dalle finestre e dalle chiavi. \relax }}{62}{figure.caption.65}\protected@file@percent }
\newlabel{fig:beam1}{{4.1}{62}{Processo di windowing \cite {apachebeam}. Le finestre sono assegnate nel processo di Windowing, tuttavia la suddivisione vera e propria avviene solo quando viene effettuata anche la GroupByKey. Questo significa che qualunque operazione sia compiuta dalla ParDo raffigurata nel terzo blocco sarà eseguita indistintamente dalle finestre e dalle chiavi. \relax }{figure.caption.65}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.1}Fixed}{62}{subsection.4.1.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces Fixed Windows. Ogni finestra ha grandezza fissa di 15 secondi. \relax }}{63}{figure.caption.66}\protected@file@percent }
\newlabel{fig:window1}{{4.2}{63}{Fixed Windows. Ogni finestra ha grandezza fissa di 15 secondi. \relax }{figure.caption.66}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.2}Sliding}{63}{subsection.4.1.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces Sliding Windows. Ogni finestra ha larghezza fissa di 30 secondi, le finestre successive alla prima si spostano in avanti di 15 secondi rispetto la precedente e possono sovrapporsi.\relax }}{64}{figure.caption.67}\protected@file@percent }
\newlabel{fig:window2}{{4.3}{64}{Sliding Windows. Ogni finestra ha larghezza fissa di 30 secondi, le finestre successive alla prima si spostano in avanti di 15 secondi rispetto la precedente e possono sovrapporsi.\relax }{figure.caption.67}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.1.3}Sessions}{64}{subsection.4.1.3}\protected@file@percent }
\citation{coulouris_2012}
\abx@aux@cite{coulouris_2012}
\abx@aux@segm{0}{0}{coulouris_2012}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.4}{\ignorespaces Session Windows. L'unico vincolo \IeC {\`e} la \textit  {gap duration} minima di 30 secondi rispetto alla finestra precedente. Le finestre possono sovrapporsi e sono indipendenti rispetto ogni chiave. \relax }}{66}{figure.caption.68}\protected@file@percent }
\newlabel{fig:window3}{{4.4}{66}{Session Windows. L'unico vincolo è la \textit {gap duration} minima di 30 secondi rispetto alla finestra precedente. Le finestre possono sovrapporsi e sono indipendenti rispetto ogni chiave. \relax }{figure.caption.68}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.2}Publish-Subscribe}{66}{section.4.2}\protected@file@percent }
\newlabel{pubsub}{{4.2}{66}{Publish-Subscribe}{section.4.2}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.5}{\ignorespaces Esempio di rete Pub/Sub. A, B e C sono publisher, X, Y e Z sono subscriber, A, B e C sono topic.\relax }}{67}{figure.caption.69}\protected@file@percent }
\newlabel{fig:pubsub1}{{4.5}{67}{Esempio di rete Pub/Sub. A, B e C sono publisher, X, Y e Z sono subscriber, A, B e C sono topic.\relax }{figure.caption.69}{}}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.6}{\ignorespaces Codice Java di lettura da un topic PubSub. \textit  {p} \IeC {\`e} la pipeline, vengono letti oggetti Event da un topic di PubSub, conservando il timestamp originale di quegli eventi.\relax }}{68}{figure.caption.70}\protected@file@percent }
\newlabel{fig:pubsubread}{{4.6}{68}{Codice Java di lettura da un topic PubSub. \textit {p} è la pipeline, vengono letti oggetti Event da un topic di PubSub, conservando il timestamp originale di quegli eventi.\relax }{figure.caption.70}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.3}Watermark}{68}{section.4.3}\protected@file@percent }
\newlabel{watermark}{{4.3}{68}{Watermark}{section.4.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.7}{\ignorespaces Watermark, processing time, event time \cite {akidauchernyaklax}. L'asse orizzontale \IeC {\`e} il timestamp dell'evento, l'asse verticale \IeC {\`e} l'istante in cui lo stesso evento viene processato dalla pipeline. La funzione rossa rappresenta l'andamento del ritardo di processamento, che non \IeC {\`e} costante. \relax }}{70}{figure.caption.71}\protected@file@percent }
\newlabel{fig:pubsub1}{{4.7}{70}{Watermark, processing time, event time \cite {akidauchernyaklax}. L'asse orizzontale è il timestamp dell'evento, l'asse verticale è l'istante in cui lo stesso evento viene processato dalla pipeline. La funzione rossa rappresenta l'andamento del ritardo di processamento, che non è costante. \relax }{figure.caption.71}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4.4}Triggering}{70}{section.4.4}\protected@file@percent }
\newlabel{trigger}{{4.4}{70}{Triggering}{section.4.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}Comportamento del trigger}{71}{subsection.4.4.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Accumulating}{71}{section*.72}\protected@file@percent }
\citation{akidau_chernyak_lax_2018}
\abx@aux@cite{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.8}{\ignorespaces Accumulating fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }}{73}{figure.caption.73}\protected@file@percent }
\newlabel{fig:accumulating}{{4.8}{73}{Accumulating fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }{figure.caption.73}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Discarding}{73}{section*.74}\protected@file@percent }
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.9}{\ignorespaces Discarding fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }}{74}{figure.caption.75}\protected@file@percent }
\newlabel{fig:discarding}{{4.9}{74}{Discarding fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }{figure.caption.75}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Accumulating and retracting}{74}{section*.76}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.10}{\ignorespaces Accumulating and retracting fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale e la differenza. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }}{75}{figure.caption.77}\protected@file@percent }
\newlabel{fig:accretract}{{4.10}{75}{Accumulating and retracting fired panes. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale e la differenza. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }{figure.caption.77}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}Tipologie di trigger}{75}{subsection.4.4.2}\protected@file@percent }
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Repeated update triggers}{76}{section*.78}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.11}{\ignorespaces Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Per-record trigger.\relax }}{76}{figure.caption.79}\protected@file@percent }
\newlabel{img:triggercount}{{4.11}{76}{Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Per-record trigger.\relax }{figure.caption.79}{}}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.12}{\ignorespaces Esempio per-record triggers. Sull'asse orizzontale si ha il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }}{77}{figure.caption.80}\protected@file@percent }
\newlabel{fig:triggerperrecord}{{4.12}{77}{Esempio per-record triggers. Sull'asse orizzontale si ha il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }{figure.caption.80}{}}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.13}{\ignorespaces Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Unaligned delay trigger.\relax }}{78}{figure.caption.81}\protected@file@percent }
\newlabel{img:triggerunaligned}{{4.13}{78}{Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Unaligned delay trigger.\relax }{figure.caption.81}{}}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.14}{\ignorespaces Esempio trigger unaligned delay \cite {akidauchernyaklax}. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Per ogni contatore che fa scattare un trigger \IeC {\`e} mostrata in verticale una retta che evidenzia il tempo trascorso dall'evento all'istante in cui scatta. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }}{79}{figure.caption.82}\protected@file@percent }
\newlabel{fig:triggerunaligned}{{4.14}{79}{Esempio trigger unaligned delay \cite {akidauchernyaklax}. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Per ogni contatore che fa scattare un trigger è mostrata in verticale una retta che evidenzia il tempo trascorso dall'evento all'istante in cui scatta. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }{figure.caption.82}{}}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.15}{\ignorespaces Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Aligned delay trigger.\relax }}{80}{figure.caption.83}\protected@file@percent }
\newlabel{img:triggerunaligned}{{4.15}{80}{Pseudocodice da \cite {akidauchernyaklax} per la definizione di un Aligned delay trigger.\relax }{figure.caption.83}{}}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.16}{\ignorespaces Esempio trigger aligned delay. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Per ogni evento che fa scattare un trigger sono visibili delle frecce rosse che evidenziano l'istante in cui \IeC {\`e} scattato. Essendo allineato, il firing avviene per tutte lefinestre. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }}{81}{figure.caption.84}\protected@file@percent }
\newlabel{fig:triggeraligned}{{4.16}{81}{Esempio trigger aligned delay. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Per ogni evento che fa scattare un trigger sono visibili delle frecce rosse che evidenziano l'istante in cui è scattato. Essendo allineato, il firing avviene per tutte lefinestre. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }{figure.caption.84}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Completeness trigger}{81}{section*.85}\protected@file@percent }
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.17}{\ignorespaces {Pseudocodice da \cite {akidauchernyaklax} per la definizione di un On-time completeness trigger}\relax }}{82}{figure.caption.86}\protected@file@percent }
\newlabel{img:triggerwatermark}{{4.17}{82}{{Pseudocodice da \cite {akidauchernyaklax} per la definizione di un On-time completeness trigger}\relax }{figure.caption.86}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.18}{\ignorespaces Esempio On Time trigger. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Nell'istante in cui il watermark incontra l'istante di chiusura finestra, scatta il trigger per quella finestra. Un evento arriva con ritardo eccessivo e viene perso. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }}{83}{figure.caption.87}\protected@file@percent }
\newlabel{fig:triggerontime}{{4.18}{83}{Esempio On Time trigger. Sull'asse orizzontale si vede il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Nell'istante in cui il watermark incontra l'istante di chiusura finestra, scatta il trigger per quella finestra. Un evento arriva con ritardo eccessivo e viene perso. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}. \relax }{figure.caption.87}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Allowed lateness}{83}{section*.88}\protected@file@percent }
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\citation{akidauchernyaklax}
\abx@aux@segm{0}{0}{akidauchernyaklax}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.19}{\ignorespaces Pseudocodice da \cite {akidauchernyaklax} per la definizione di tre trigger, rispettivamente Early, On-Time e Late.\relax }}{84}{figure.caption.89}\protected@file@percent }
\newlabel{img:triggerwatermarkearlylate}{{4.19}{84}{Pseudocodice da \cite {akidauchernyaklax} per la definizione di tre trigger, rispettivamente Early, On-Time e Late.\relax }{figure.caption.89}{}}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\citation{akidau_chernyak_lax_2018}
\abx@aux@segm{0}{0}{akidau_chernyak_lax_2018}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4.20}{\ignorespaces Esempio Early, On Time, Late triggers. Sull'asse orizzontale si ha il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger \IeC {\`e} calcolata la somma parziale. Nell'istante in cui il watermark incontra l'istante di chiusura finestra, scatta il trigger On-time per quella finestra. Se le condizioni del trigger Early avvengono prima del trigger On-time, essi scattano. Similmente per i Late, se le condizioni avvengono dopo On-time. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }}{85}{figure.caption.90}\protected@file@percent }
\newlabel{fig:triggerontimeearlylate}{{4.20}{85}{Esempio Early, On Time, Late triggers. Sull'asse orizzontale si ha il timestamp dell'evento, su quello verticale l'istante in cui viene processato dalla pipeline. Gli eventi sono divisi per finestre di larghezza fissa pari a 2 minuti. Ogni evento ha un certo valore intero, per ogni trigger è calcolata la somma parziale. Nell'istante in cui il watermark incontra l'istante di chiusura finestra, scatta il trigger On-time per quella finestra. Se le condizioni del trigger Early avvengono prima del trigger On-time, essi scattano. Similmente per i Late, se le condizioni avvengono dopo On-time. Versione modificata di un video tratto da \cite {akidau_chernyak_lax_2018}.\relax }{figure.caption.90}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {5}Sample and Hold in Streaming}{86}{chapter.5}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{sampleholdstream}{{5}{86}{Sample and Hold in Streaming}{chapter.5}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces Architettura sistema previsionale. Abbiamo gli eventi su PubSub provenienti direttamente da SCADA, questi eventi vengono processati in tempo reale per lanciare previsioni aggiornate con il modello predittivo. La nuvoletta rappresenta un topic PubSub, il cilindro rappresenta un database, i blocchi gialli su Dataflow sono processi di trasformazione dei dati, il blocco SCADA rappresenta il sistema SCADA del cliente, il modello predittivo su MLEngine \IeC {\`e} il modello allenato, il blocco UI \IeC {\`e} l'interfaccia utente finale. Ogni elemento dell'architettura realizzata si trova in un piano che indica la tecnologia utilizzata per esso. Su PubSub abbiamo Google PubSub, su InfluxDB abbiamo un database di Influx, su Beam/Dataflow ogni blocco \IeC {\`e} una pipeline differente, infine MLEngine il blocco \IeC {\`e} un modello predittivo.\relax }}{87}{figure.caption.91}\protected@file@percent }
\newlabel{fig:predict}{{5.1}{87}{Architettura sistema previsionale. Abbiamo gli eventi su PubSub provenienti direttamente da SCADA, questi eventi vengono processati in tempo reale per lanciare previsioni aggiornate con il modello predittivo. La nuvoletta rappresenta un topic PubSub, il cilindro rappresenta un database, i blocchi gialli su Dataflow sono processi di trasformazione dei dati, il blocco SCADA rappresenta il sistema SCADA del cliente, il modello predittivo su MLEngine è il modello allenato, il blocco UI è l'interfaccia utente finale. Ogni elemento dell'architettura realizzata si trova in un piano che indica la tecnologia utilizzata per esso. Su PubSub abbiamo Google PubSub, su InfluxDB abbiamo un database di Influx, su Beam/Dataflow ogni blocco è una pipeline differente, infine MLEngine il blocco è un modello predittivo.\relax }{figure.caption.91}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.2}{\ignorespaces Esempio di campionamento Sample and Hold. Sul'asse orizzontale abbiamo il tempo da 0 a 60 secondi. Le nuvolette gialle sono le letture dei sensori in arrivo su PubSub, i blocchi azzurri sono i campioni ottenuti come risultato a intervalli di 15 secondi.\relax }}{88}{figure.caption.92}\protected@file@percent }
\newlabel{fig:sensoriesempio}{{5.2}{88}{Esempio di campionamento Sample and Hold. Sul'asse orizzontale abbiamo il tempo da 0 a 60 secondi. Le nuvolette gialle sono le letture dei sensori in arrivo su PubSub, i blocchi azzurri sono i campioni ottenuti come risultato a intervalli di 15 secondi.\relax }{figure.caption.92}{}}
\citation{knowles_2017_timely}
\abx@aux@cite{knowles_2017_timely}
\abx@aux@segm{0}{0}{knowles_2017_timely}
\citation{knowles_2017_timely}
\abx@aux@segm{0}{0}{knowles_2017_timely}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5.1}Stateful ParDo}{89}{section.5.1}\protected@file@percent }
\newlabel{statefulpardo}{{5.1}{89}{Stateful ParDo}{section.5.1}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.3}{\ignorespaces Rappresentazione del funzionamento di una ParDo Stateful \cite {knowles_2017_timely}. Sopra abbiamo i dati in ingresso, con 3 chiavi differenti: "giallo", "verde" e "rosso". Per ogni elemento processato, la Stateful ParDo contiene un proprio stato all'interno della stessa chiave. Ci sono inoltre tre timer: due conservati per la chiave "rosso" e uno per la chiave "giallo". Sotto si hanno gli elementi in uscita dopo il processamento.\relax }}{90}{figure.caption.93}\protected@file@percent }
\newlabel{arg4}{{5.3}{90}{Rappresentazione del funzionamento di una ParDo Stateful \cite {knowles_2017_timely}. Sopra abbiamo i dati in ingresso, con 3 chiavi differenti: "giallo", "verde" e "rosso". Per ogni elemento processato, la Stateful ParDo contiene un proprio stato all'interno della stessa chiave. Ci sono inoltre tre timer: due conservati per la chiave "rosso" e uno per la chiave "giallo". Sotto si hanno gli elementi in uscita dopo il processamento.\relax }{figure.caption.93}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.1}Tipi di stato}{90}{subsection.5.1.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{ValueState}{90}{section*.94}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{BagState}{91}{section*.95}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.2}Timer}{92}{subsection.5.1.2}\protected@file@percent }
\newlabel{statefultimers}{{5.1.2}{92}{Timer}{subsection.5.1.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Event Time}{92}{section*.96}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{Processing Time}{93}{section*.97}\protected@file@percent }
\citation{beam2687}
\abx@aux@cite{beam2687}
\abx@aux@segm{0}{0}{beam2687}
\citation{beam4594}
\abx@aux@cite{beam4594}
\abx@aux@segm{0}{0}{beam4594}
\citation{shannon_mark_2014}
\abx@aux@cite{shannon_mark_2014}
\abx@aux@segm{0}{0}{shannon_mark_2014}
\citation{beam7035}
\abx@aux@cite{beam7035}
\abx@aux@segm{0}{0}{beam7035}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.1.3}Supporto Python}{94}{subsection.5.1.3}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5.2}Architettura}{95}{section.5.2}\protected@file@percent }
\citation{martin2000design}
\abx@aux@cite{martin2000design}
\abx@aux@segm{0}{0}{martin2000design}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.4}{\ignorespaces Architettura di riferimento: i riquadri in giallo mostrano operazioni eseguite in streaming. Il "JSON Tag sensori" contiene la lista di sensori cui \IeC {\`e} richiesto il ricampionamento, che rimane fissa per tutta la durata della pipeline.\relax }}{96}{figure.caption.98}\protected@file@percent }
\newlabel{fig:streaming1}{{5.4}{96}{Architettura di riferimento: i riquadri in giallo mostrano operazioni eseguite in streaming. Il "JSON Tag sensori" contiene la lista di sensori cui è richiesto il ricampionamento, che rimane fissa per tutta la durata della pipeline.\relax }{figure.caption.98}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.5}{\ignorespaces UML delle class sintetico. SampleAndHoldPipeline \IeC {\`e} la classe che contiene la pipeline, Event \IeC {\`e} l'astrazione della lettura di un sensore, SampleAndHold contiene la logica del campionamento stateful, PubSubInput e PubSubInflux contengono rispettivamente i metodi di lettura da PubSub e scrittura su InfluxDB.\relax }}{98}{figure.caption.99}\protected@file@percent }
\newlabel{fig:uml}{{5.5}{98}{UML delle class sintetico. SampleAndHoldPipeline è la classe che contiene la pipeline, Event è l'astrazione della lettura di un sensore, SampleAndHold contiene la logica del campionamento stateful, PubSubInput e PubSubInflux contengono rispettivamente i metodi di lettura da PubSub e scrittura su InfluxDB.\relax }{figure.caption.99}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.1}Lettura da PubSub e filtraggio}{98}{subsection.5.2.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.6}{\ignorespaces Prima parte della pipeline: legge gli eventi da pubsub, filtra i tag interessati dalla lista fornita in JSON, ricava i segnali seno e coseno a partire dai segnali direzione vento.\relax }}{99}{figure.caption.100}\protected@file@percent }
\newlabel{fig:streaming3}{{5.6}{99}{Prima parte della pipeline: legge gli eventi da pubsub, filtra i tag interessati dalla lista fornita in JSON, ricava i segnali seno e coseno a partire dai segnali direzione vento.\relax }{figure.caption.100}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.2}Windowing}{100}{subsection.5.2.2}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.7}{\ignorespaces Windowing degli eventi sensori. Vengono usate delle Fixed Window di ampiezza 15 secondi.\relax }}{100}{figure.caption.101}\protected@file@percent }
\newlabel{fig:streaming4}{{5.7}{100}{Windowing degli eventi sensori. Vengono usate delle Fixed Window di ampiezza 15 secondi.\relax }{figure.caption.101}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.3}Trigger}{101}{subsection.5.2.3}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.4}CombineByKey}{102}{subsection.5.2.4}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.8}{\ignorespaces Allineamento dei timestamp all'istante di fine finestra. Questo avviene con una CombinePerKey usando come chiave i TAG degli eventi sensori e una successiva ParDo che allinea il timestamp di ciscun evento al suo fine finestra.\relax }}{102}{figure.caption.102}\protected@file@percent }
\newlabel{img:streaming5}{{5.8}{102}{Allineamento dei timestamp all'istante di fine finestra. Questo avviene con una CombinePerKey usando come chiave i TAG degli eventi sensori e una successiva ParDo che allinea il timestamp di ciscun evento al suo fine finestra.\relax }{figure.caption.102}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.9}{\ignorespaces Raggruppamento dei sensori per TAG all'interno delle finestre temporali fisse di 15 secondi. Una lettura potrebbe essere ripetuta, ad esempio per Sensore 1 \IeC {\`e} stata ricevuto due volte il valore "1" nell'intervallo da 0 a 15 secondi, similmente per Sensore 2 con il valore 22 ripetuto nell'intervallo fra 45 e 60 secondi.\relax }}{103}{figure.caption.103}\protected@file@percent }
\newlabel{img:streamingwindow}{{5.9}{103}{Raggruppamento dei sensori per TAG all'interno delle finestre temporali fisse di 15 secondi. Una lettura potrebbe essere ripetuta, ad esempio per Sensore 1 è stata ricevuto due volte il valore "1" nell'intervallo da 0 a 15 secondi, similmente per Sensore 2 con il valore 22 ripetuto nell'intervallo fra 45 e 60 secondi.\relax }{figure.caption.103}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.5}Stateful ParDo}{104}{subsection.5.2.5}\protected@file@percent }
\newlabel{statefulimplem}{{5.2.5}{104}{Stateful ParDo}{subsection.5.2.5}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.10}{\ignorespaces Risultato dopo la divisione in finestre e l'allineamento del timestamp. Si ottengono campioni solo per quei sensori che hanno inviato una lettura nell'intervallo di 15 secondi precedente al campione stesso. In questo esempio, sono considerati tre sensori. Nell'intervallo da 0 a 15 secondi, tutti e tre hanno una lettura, quindi si ottiene un campione per ciascuno di essi all'istante 15. Nessun sensore invia una lettura fra 15 e 30 secondi, per cui non si ha nessun campione. Nell'intervallo fra 30 e 45 secondi si ha una lettura solo da Sensore 1, per cui si ha un campione solo per esso all'istante 45, e cos\IeC {\`\i } via.\relax }}{105}{figure.caption.104}\protected@file@percent }
\newlabel{fig:sensori2}{{5.10}{105}{Risultato dopo la divisione in finestre e l'allineamento del timestamp. Si ottengono campioni solo per quei sensori che hanno inviato una lettura nell'intervallo di 15 secondi precedente al campione stesso. In questo esempio, sono considerati tre sensori. Nell'intervallo da 0 a 15 secondi, tutti e tre hanno una lettura, quindi si ottiene un campione per ciascuno di essi all'istante 15. Nessun sensore invia una lettura fra 15 e 30 secondi, per cui non si ha nessun campione. Nell'intervallo fra 30 e 45 secondi si ha una lettura solo da Sensore 1, per cui si ha un campione solo per esso all'istante 45, e così via.\relax }{figure.caption.104}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.11}{\ignorespaces Raggruppamento dei campioni allineati con lo stesso timestamp in una unica collezione.\relax }}{106}{figure.caption.105}\protected@file@percent }
\newlabel{fig:streaming6}{{5.11}{106}{Raggruppamento dei campioni allineati con lo stesso timestamp in una unica collezione.\relax }{figure.caption.105}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.12}{\ignorespaces Global Window, che riunisce gli elementi in una finestra unica, e la Stateful ParDo vera e propria.\relax }}{107}{figure.caption.106}\protected@file@percent }
\newlabel{fig:streaming7}{{5.12}{107}{Global Window, che riunisce gli elementi in una finestra unica, e la Stateful ParDo vera e propria.\relax }{figure.caption.106}{}}
\citation{onofre_2017}
\abx@aux@cite{onofre_2017}
\abx@aux@segm{0}{0}{onofre_2017}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.13}{\ignorespaces Diagramma di flusso della Stateful ParDo, dopo la prima iterazione. I riquadri in verde evidenziano i momenti in cui vengono utilizzati gli stati \texttt  {bufferState} e \texttt  {currTimestamp}, quelli in blu evidenziano l'output dei campioni: si noti che la Return non manda alcun valore in uscita. Inizia sempre con la ricezione di una collezione di Event, costituita dall'insieme delle letture in un certo timestamp. Alla prima lettura, vengono inizializzati \texttt  {currTimestamp} e \texttt  {bufferState}. Se il flusso dati \IeC {\`e} gestito correttamente dal Triggering, non dovrebbe verificarsi mai o quasi mai l'ipotesi che scarta la collezione di Event ricevuti.\relax }}{110}{figure.caption.107}\protected@file@percent }
\newlabel{fig:stateful_pardo_fluxdiag}{{5.13}{110}{Diagramma di flusso della Stateful ParDo, dopo la prima iterazione. I riquadri in verde evidenziano i momenti in cui vengono utilizzati gli stati \texttt {bufferState} e \texttt {currTimestamp}, quelli in blu evidenziano l'output dei campioni: si noti che la Return non manda alcun valore in uscita. Inizia sempre con la ricezione di una collezione di Event, costituita dall'insieme delle letture in un certo timestamp. Alla prima lettura, vengono inizializzati \texttt {currTimestamp} e \texttt {bufferState}. Se il flusso dati è gestito correttamente dal Triggering, non dovrebbe verificarsi mai o quasi mai l'ipotesi che scarta la collezione di Event ricevuti.\relax }{figure.caption.107}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2.6}Scrittura su InfluxDB}{111}{subsection.5.2.6}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.14}{\ignorespaces Diagramma completo della Streaming Pipeline con la Stateful Pardo realizzata allo scopo di ricampionare i segnali richiesti per la rete previsionale con la tecnica Sample and Hold.\relax }}{112}{figure.caption.108}\protected@file@percent }
\newlabel{fig:streaming2}{{5.14}{112}{Diagramma completo della Streaming Pipeline con la Stateful Pardo realizzata allo scopo di ricampionare i segnali richiesti per la rete previsionale con la tecnica Sample and Hold.\relax }{figure.caption.108}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5.3}Simulatore eventi}{112}{section.5.3}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.15}{\ignorespaces Schema logico di funzionamento del simulatore eventi sensori. Il simulatore legge da Influx i dati grezzi dei sensori per pubblicarli periodicamente secondo la velocit\IeC {\`a} impostata. \relax }}{113}{figure.caption.109}\protected@file@percent }
\newlabel{fig:simulator_fluxdiag}{{5.15}{113}{Schema logico di funzionamento del simulatore eventi sensori. Il simulatore legge da Influx i dati grezzi dei sensori per pubblicarli periodicamente secondo la velocità impostata. \relax }{figure.caption.109}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5.4}Testing e risultati}{114}{section.5.4}\protected@file@percent }
\newlabel{testerisultati}{{5.4}{114}{Testing e risultati}{section.5.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.4.1}Prova con Completeness Trigger}{114}{subsection.5.4.1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.16}{\ignorespaces Log della sequenza di elementi emessa in ingresso alla Stateful ParDo. Il primo valore visualizzato \IeC {\`e} il timestamp della collezione: l'ordine \IeC {\`e} in buona parte sparso. Questo causa un comportamento non voluto, rendendo di fatto impossibile il ricampionamento richiesto.\relax }}{115}{figure.caption.110}\protected@file@percent }
\newlabel{fig:testing1}{{5.16}{115}{Log della sequenza di elementi emessa in ingresso alla Stateful ParDo. Il primo valore visualizzato è il timestamp della collezione: l'ordine è in buona parte sparso. Questo causa un comportamento non voluto, rendendo di fatto impossibile il ricampionamento richiesto.\relax }{figure.caption.110}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.4.2}Sliding windows e trigger combinati}{115}{subsection.5.4.2}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.4.3}Unaligned Delay Trigger}{116}{subsection.5.4.3}\protected@file@percent }
\newlabel{finaltrigger}{{5.4.3}{116}{Unaligned Delay Trigger}{subsection.5.4.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.17}{\ignorespaces Telemetrie grezze di un sensore in una giornata ideale di 24 ore. Si noti che i punti che costituiscono i campioni si trovano a distanze irregolari. \relax }}{117}{figure.caption.111}\protected@file@percent }
\newlabel{fig:testres1}{{5.17}{117}{Telemetrie grezze di un sensore in una giornata ideale di 24 ore. Si noti che i punti che costituiscono i campioni si trovano a distanze irregolari. \relax }{figure.caption.111}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.18}{\ignorespaces Stessa telemetria ma dopo il ricampionamento. Si noti la densit\IeC {\`a} maggiore dei punti che costituiscono i singoli campioni, l'andamento invece \IeC {\`e} sempre lo stesso, segno di un buon ricampionamento che mantiene l'andamento originale del segnale.\relax }}{117}{figure.caption.112}\protected@file@percent }
\newlabel{fig:testres1}{{5.18}{117}{Stessa telemetria ma dopo il ricampionamento. Si noti la densità maggiore dei punti che costituiscono i singoli campioni, l'andamento invece è sempre lo stesso, segno di un buon ricampionamento che mantiene l'andamento originale del segnale.\relax }{figure.caption.112}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.19}{\ignorespaces Log della Stateful ParDo che segnala la collezione di eventi fuori ordine.\relax }}{118}{figure.caption.113}\protected@file@percent }
\newlabel{fig:testlog1}{{5.19}{118}{Log della Stateful ParDo che segnala la collezione di eventi fuori ordine.\relax }{figure.caption.113}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.20}{\ignorespaces Segnale in analisi dopo un ricampionamento corretto.\relax }}{118}{figure.caption.114}\protected@file@percent }
\newlabel{img:testunord1}{{5.20}{118}{Segnale in analisi dopo un ricampionamento corretto.\relax }{figure.caption.114}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.21}{\ignorespaces Segnale in analisi dopo il caso critico di campione fuori ordine. Il livello del segnale persiste fino alle 14:40:15, in cui vi \IeC {\`e} una nuova lettura. \relax }}{119}{figure.caption.115}\protected@file@percent }
\newlabel{img:testunord2}{{5.21}{119}{Segnale in analisi dopo il caso critico di campione fuori ordine. Il livello del segnale persiste fino alle 14:40:15, in cui vi è una nuova lettura. \relax }{figure.caption.115}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5.5}Modifiche e miglioramenti futuri}{119}{section.5.5}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.22}{\ignorespaces Prima modifica proposta per la pipeline in streaming di Sample and Hold. Lo stato viene separato fra i singoli sensori, dato che il TAG \IeC {\`e} utilizzato come chiave per la Stateful ParDo.\relax }}{120}{figure.caption.116}\protected@file@percent }
\newlabel{fig:stateful_upgr1}{{5.22}{120}{Prima modifica proposta per la pipeline in streaming di Sample and Hold. Lo stato viene separato fra i singoli sensori, dato che il TAG è utilizzato come chiave per la Stateful ParDo.\relax }{figure.caption.116}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5.23}{\ignorespaces Altra modifica proposta. Si introduce un Processing Time Timer che limita il tempo massimo trascorso prima che un output venga prodotto.\relax }}{121}{figure.caption.117}\protected@file@percent }
\newlabel{fig_stateful_upgr2}{{5.23}{121}{Altra modifica proposta. Si introduce un Processing Time Timer che limita il tempo massimo trascorso prima che un output venga prodotto.\relax }{figure.caption.117}{}}
\newlabel{conclusioni}{{5.5}{122}{Conclusioni}{chapter*.118}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {chapter}{\numberline {A}Tecnologie utilizzate}{123}{appendix.Alph1}\protected@file@percent }
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\defcounter {refsection}{0}\relax }\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{appendice}{{A}{123}{Tecnologie utilizzate}{appendix.Alph1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {A.1}Google Cloud Platform}{123}{section.Alph1.1}\protected@file@percent }
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.1}BigQuery}{123}{subsection.Alph1.1.1}\protected@file@percent }
\newlabel{bigquery}{{A.1.1}{123}{BigQuery}{subsection.Alph1.1.1}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.2}Google Cloud Storage}{124}{subsection.Alph1.1.2}\protected@file@percent }
\newlabel{gcs}{{A.1.2}{124}{Google Cloud Storage}{subsection.Alph1.1.2}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.3}Compute Engine}{124}{subsection.Alph1.1.3}\protected@file@percent }
\newlabel{computengine}{{A.1.3}{124}{Compute Engine}{subsection.Alph1.1.3}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {A.1}{\ignorespaces GCP Compute Engine, schermata di dimensionamento personalizzato macchina. Oltre a una collezione di modelli predefiniti, \IeC {\`e} possibile scegliere il dimensionamento dei singoli componenti di una macchina. Compute Engine allocher\IeC {\`a} le risorse richieste sull'hardware a disposizione di Google Cloud.\relax }}{125}{figure.caption.119}\protected@file@percent }
\newlabel{img:computengine1}{{A.1}{125}{GCP Compute Engine, schermata di dimensionamento personalizzato macchina. Oltre a una collezione di modelli predefiniti, è possibile scegliere il dimensionamento dei singoli componenti di una macchina. Compute Engine allocherà le risorse richieste sull'hardware a disposizione di Google Cloud.\relax }{figure.caption.119}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {A.2}{\ignorespaces GCP Compute Engine, schermata di suggerimento ridimensionamento istanza. Per ogni istanza sottoutilizzata, viene suggerito un possibile ridimensionamento per allineare la capacit\IeC {\`a} della macchina al suo carico delle ultime ore. \relax }}{126}{figure.caption.120}\protected@file@percent }
\newlabel{fig:computengine2}{{A.2}{126}{GCP Compute Engine, schermata di suggerimento ridimensionamento istanza. Per ogni istanza sottoutilizzata, viene suggerito un possibile ridimensionamento per allineare la capacità della macchina al suo carico delle ultime ore. \relax }{figure.caption.120}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.4}Google Dataflow}{126}{subsection.Alph1.1.4}\protected@file@percent }
\newlabel{dataflow}{{A.1.4}{126}{Google Dataflow}{subsection.Alph1.1.4}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {A.1.5}Piattaforma IA}{127}{subsection.Alph1.1.5}\protected@file@percent }
\newlabel{mlengine}{{A.1.5}{127}{Piattaforma IA}{subsection.Alph1.1.5}{}}
\citation{python2sunsetting}
\abx@aux@cite{python2sunsetting}
\abx@aux@segm{0}{0}{python2sunsetting}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {A.3}{\ignorespaces Piattaforma IA, menu laterale: sono mostrati tutti gli strumenti messi a disposizione. Su Hub IA si pu\IeC {\`o} accedere ai notebook condivisi dalla comunit\IeC {\`a} di sviluppatori Tensorflow. Su Etichettatura dati si hanno strumenti utili per il labeling dei dati. In Notebook si possono creare e lanciare con supporto di macchine in cloud i Notebook in Python. Su Job si possono lanciare i training delle reti neurali e visualizzare lo stato e i risultati. Su Modelli si possono caricare i modelli di reti neurali dopo il training per renderli disponibili a qualunque applicativo.\relax }}{128}{figure.caption.121}\protected@file@percent }
\newlabel{fig:iahub}{{A.3}{128}{Piattaforma IA, menu laterale: sono mostrati tutti gli strumenti messi a disposizione. Su Hub IA si può accedere ai notebook condivisi dalla comunità di sviluppatori Tensorflow. Su Etichettatura dati si hanno strumenti utili per il labeling dei dati. In Notebook si possono creare e lanciare con supporto di macchine in cloud i Notebook in Python. Su Job si possono lanciare i training delle reti neurali e visualizzare lo stato e i risultati. Su Modelli si possono caricare i modelli di reti neurali dopo il training per renderli disponibili a qualunque applicativo.\relax }{figure.caption.121}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {A.2}Tensorflow e Tensorboard}{128}{section.Alph1.2}\protected@file@percent }
\newlabel{tensorboard}{{A.2}{128}{Tensorflow e Tensorboard}{section.Alph1.2}{}}
\abx@aux@refcontextdefaultsdone
\abx@aux@defaultrefcontext{0}{aggarwal}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{panzieri}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{witten}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{imagenet}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{hochreiter}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{colah}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{sutskever}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{leguennec}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{giuliacci_giuliacci_corazzon_2010}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{kimball_ross_2013}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{kefauver_patschke_2007}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{calandrino_chiani_2002}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{ross_2014}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{wikipedia_2019}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{wei_1990}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{kemker2018measuring}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{chung2017ubershuffle}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{pickle}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{white_2012}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{apachebeam}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{numpyrandomstate}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{tensorflow}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{flovik_flovik_2018}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{akidauchernyaklax}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{coulouris_2012}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{akidau_chernyak_lax_2018}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{knowles_2017_timely}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{beam2687}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{beam4594}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{shannon_mark_2014}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{beam7035}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{martin2000design}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{onofre_2017}{none/global//global/global}
\abx@aux@defaultrefcontext{0}{python2sunsetting}{none/global//global/global}
